services:

  go-app:
    restart: always
    build: .
    ports:
      - 8080:8080
      - 8000:8000
      - 50051:50051
    container_name: go-app
    hostname: go-app
    networks:
      - local-network
    depends_on: 
      rabbitmq:
          condition: service_healthy
      migrate:
        condition: service_started
    deploy:
      restart_policy:
        condition: on-failure

  mysql:
    image: mysql:5.7
    container_name: mysqlDB
    restart: always
    networks:
       - local-network
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orders
      MYSQL_ROOT_USER: root
    ports:
      - 3306:3306
    volumes:
      - .docker/mysql:/var/lib/mysql
    healthcheck:
      test: "mysql $$MYSQL_DATABASE -u$$MYSQL_ROOT_USER -p$$MYSQL_ROOT_PASSWORD -e 'SELECT 1;'"
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate
    container_name: mysql-migrate
    networks:
      - local-network
    volumes:
      - ./internal/infra/database/sql/migrations:/migrations
    command: ["-path", "/migrations/", "-database",  "mysql://root:root@tcp(mysqlDB)/orders", "-verbose", "up"]
    links: 
      - mysql
    depends_on:
      mysql:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    networks:
      - local-network
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  local-network:
    driver: bridge